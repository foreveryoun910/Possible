<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.possable.app.member.mapper.MemberMapper">
	<!-- 검색 기능 -->
	<sql id="criteria">
				<trim prefix="(" suffix=")" prefixOverrides="OR">
             		<foreach collection="typeArr" item="type">
             			<trim prefix="OR">
             				<choose>
				             	<when test="type == 'I'.toString()">
				                   ID LIKE '%' || #{keyword} || '%'
				                </when>
				                <when test="type == 'N'.toString()">
				                   NAME LIKE '%' || #{keyword} || '%'
				                </when>
				                <when test="type == 'P'.toString()">
				                   PHONE LIKE '%' || #{keyword} || '%'
				                </when>
             				</choose>
             			</trim>
             		</foreach>
             	</trim>
	</sql>
	<select id="getUserById" parameterType="String" resultType="MemberVO">
	SELECT * FROM MEMBER WHERE ID=#{id}
	</select>
	
	<!-- 전체 수 계산기능 -->
	<select id="getTotalCount" resultType="int">
			SELECT COUNT(*) 
			FROM MEMBER
				<where>
					<include refid="criteria"></include>
				</where>
	</select>
	<!-- 회원갈카 회원 전체조회 -->
	<select id="memberList" resultType="MemberVO">
   
      SELECT * 
      FROM (
             SELECT 
             /*+ INDEX_DESC(MEMBER IDX_MEMBER) */ 
             ROWNUM RN, SEQ, ID, EMAIL, PHONE, NAME
             FROM MEMBER
             <where> 
                <include refid="criteria"></include>
                <![CDATA[   AND ROWNUM <= #{pageNum} * #{amount} ]]>
             </where>
             ORDER BY SEQ DESC
          )
      WHERE RN > (#{pageNum} - 1) * #{amount}
   </select>
	<!-- 단건 조회 -->
	<select id="memberOneSelect" resultType="MemberVO"	parameterType="MemberVO">
	SELECT 	SEQ,
			ID,
			PASSWORD,
			NAME,
			BIRTH,
			EMAIL,
			PHONE,
			ADDR_CODE,
			AUTHOR,
			STATUS,
			GEN_DATE,
			UPT_DATE,
			ADDR_BASIC,
			ADDR_DETAIL
		FROM MEMBER
		WHERE SEQ = #{seq}
	</select>
	<!-- 아이디 중복 체크  -->
	<select id="idChk" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE ID = #{id}
	</select>
	<!-- 카카오 아이디 체크 -->
	<select id="kakaoIdCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER 
		WHERE id = #{id} and login_Status = 'kakao'
	</select>
	<!-- 아이디 찾기 -->
	<select id="idFind" resultType="String" >
		SELECT NVL(id,'0')
		FROM MEMBER
		WHERE name = #{name} AND birth = #{birth} AND status='Y'
	</select>
	
	<!-- 회원 수정 -->
	<update id="memberUpdate">
		UPDATE MEMBER
		SET STATUS = #{status},
			UPT_DATE = sysdate
			WHERE SEQ = #{seq}
	</update>
	<!-- 회원 비밀번호 찾기 변경 -->
	<update id="passFindUpdate" >
		UPDATE MEMBER SET password = #{password}
    	WHERE ID = #{id}
	</update>
	<!-- 회원등록 -->
	<insert id="memberInsert">
		<selectKey keyProperty="seq" resultType="Long" order="BEFORE">
			SELECT SEQ_MEMBER.nextval FROM DUAL
		</selectKey>
		INSERT INTO MEMBER(SEQ,
                    ID,
                    PASSWORD,
                    NAME,
                    BIRTH,
                    EMAIL,
                    PHONE,
                    ADDR_CODE,
                    STATUS,
                    GEN_DATE,
                    ADDR_BASIC,
                    ADDR_DETAIL)
		    VALUES(#{seq},
			       #{id},
			       #{password},
			       #{name},
			       #{birth},
			       #{email},
			       #{phone},
			       #{addrCode},
			       'Y',
			       sysdate,
			       #{addrBasic},
			       #{addrDetail} )	
	</insert>
	<!-- 카카오 추가 회원가입 -->
	<insert id="kakaoInsert">
		<selectKey keyProperty="seq" resultType="Long" order="BEFORE">
				SELECT SEQ_MEMBER.nextval FROM DUAL
		</selectKey>
	INSERT INTO MEMBER(SEQ,
                    ID,
                    PASSWORD,
                    NAME,
                    BIRTH,
                    EMAIL,
                    PHONE,
                    ADDR_CODE,
                    STATUS,
                    GEN_DATE,
                    ADDR_BASIC,
                    ADDR_DETAIL,
                    LOGIN_STATUS)
		    VALUES(#{seq},
			        #{id},
			       #{password},
			       #{name},
			       #{birth},
			       #{email},
			       #{phone},
			       #{addrCode},
			       'Y',
			       sysdate,
			       #{addrBasic},
			       #{addrDetail},
                  'kakao')	
	</insert>
</mapper>