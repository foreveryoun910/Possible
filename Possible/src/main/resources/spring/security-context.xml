<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- security 적용 제외 -->
	<bean id="LoginAccessDeniedHandler" class="com.yedam.possable.app.security.LoginAccessDeniedHandler"></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/resources/**" security="none" />
	
	<security:http auto-config="true" use-expressions="true">
		
		<security:intercept-url pattern="/**" 
								access="permitAll()" />
		
		<security:intercept-url pattern="/loginTest/member" 
								access="hasRole('ROLE_USER')" />
		
		<security:intercept-url pattern="/admin/**" 
								access="hasAuthority('ROLE_ADMIN')" /> <!-- 인증 ( Authentication ) : 현재 유저가 누구인지 확인 / 애플리케이션의 작업을 수행할 수 있는 주체임을 증명하는 과정 -->
								
		<security:form-login login-page="/login" 
							 login-processing-url="/login"
							 username-parameter="id" 	
							 authentication-success-handler-ref="LoginSuccess"/>
							 
										 <!-- login-processing-url="/login"	로그인 페이지 form action에 입력할 주소 지정  -->
		<security:logout logout-url="/logout" 
						 invalidate-session="true"	
						 logout-success-url="/" 
						 />
						 
		<security:access-denied-handler ref="LoginAccessDeniedHandler"/>
		<security:csrf disabled="true" />
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
		
			<security:jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query
									  ="SELECT id, password, status
										FROM member WHERE id = ?"
				authorities-by-username-query
									  ="SELECT id, 'ROLE_'|| upper(author)
										FROM member WHERE id = ?" />
			 <security:password-encoder hash="bcrypt" /> 
		</security:authentication-provider>
	</security:authentication-manager> 
	
	<!-- pattern: 앞에 반드시 / 붙여줘야 한다. 
	<security:http>
		<security:intercept-url pattern="/top.jsp" access="permitAll()" />
		
		<security:intercept-url pattern="/loginForm" access="permitAll()" />
		<security:intercept-url pattern="/logout" access="permitAll()" />
		
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		
		<security:form-login 
				login-page="/loginForm"
				login-processing-url="/login"
				username-parameter="id"
				password-parameter="password"
				authentication-success-handler-ref="/customLogin"
				default-target-url="/top.jsp" />
		
		<security:logout logout-url="/logout" logout-success-url="/top.jsp" />
		<security:access-denied-handler error-page="/error/accessError.jsp" />
		
		<security:csrf disabled="false" />
	</security:http> -->
	
</beans>